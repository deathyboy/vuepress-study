(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{191:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"git-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 常用命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化Git")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 克隆本地仓库 （/path/to/repository 本地仓库地址）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone /path/to/repository\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 克隆远程仓库")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone username@host:/path/to/repository\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加指定文件到缓存区")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${filename}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加所有改动文件到缓存区")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交改动")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${message}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交到远程仓库，master 可更换为指定分支名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如还没克隆仓库，并欲将本地仓库连接某个远程服务器，可以使用此命令")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个叫做“feature_x”的分支，并切换过去")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b feature_x\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到master分支")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地feature_x分支")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d feature_x\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新你的本地仓库至最新改动")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并其他分支到你的当前分支")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${other branchName}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在合并改动之前,可以使用此命令查看区别")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${source_branch}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${target_branch}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打 tag，创建标签，\\_1b2e1d63ff\\* 是你想要标记的提交 ID 的前 10 位字符")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".0 1b2e1d63ff\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取日志")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换分支")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${branchName}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  丢弃本地改动与提交，到服务器上获取最新的版本并将本地主分支指向到它")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard origin/master\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打开图形化Git")]),t._v("\n  gitk\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 彩色的Git输出")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config color.ui "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  设置显示历史记录时，只显示一行注释信息")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config format.pretty oneline\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 交互地添加文件至缓存区")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -i\n")])])])])},[],!1,null,null,null);n.default=e.exports}}]);